;; speculative inlining with a return_call in the contents
(module
 (memory 1)
 (import "env" "import" (func $import (result i32)))
 (func $0 (param $x i32) (result i32)
  (i32.store (i32.const 0) (i32.const 0))
  (i32.store offset=4 (i32.const 0) (i32.const 0))
  (i32.store offset=8 (i32.const 0) (i32.const 0))
  (i32.store offset=12 (i32.const 0) (i32.const 0))
  (i32.store offset=16 (i32.const 0) (i32.const 0))
  (i32.store offset=20 (i32.const 0) (i32.const 0))
  (i32.store offset=24 (i32.const 0) (i32.const 0))
  (i32.store offset=28 (i32.const 0) (i32.const 0))
  (i32.store offset=32 (i32.const 0) (i32.const 0))
  (i32.store offset=36 (i32.const 0) (i32.const 0))
  (i32.store offset=40 (i32.const 0) (i32.const 0))
  (return_call $import)
 )
 (func $1 (result i32)
  (call $0 (i32.const 2))
 )
)
